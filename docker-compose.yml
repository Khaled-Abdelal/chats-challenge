version: '3.7'

services:
  # proxy:
  #   image: nginx:alpine
  #   container_name: proxy
  #   ports:
  #     - '80:80'
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf
  #   restart: 'unless-stopped'
  #   networks:
  #     - backend
  # server:
  #   build:
  #     context: ./
  #     target: development-build-stage
  #     dockerfile: Dockerfile
  #   container_name: server
  #   ports:
  #     - '3000:3000'
  #   volumes:
  #     - ./:/app
  #     - /app/node_modules
  #   restart: 'unless-stopped'
  #   networks:
  #     - backend
  #   links:
  #     - mysql
  #   depends_on:
  #     - mysql
  mysql:
    image: mysql:5.7
    container_name: mysql
    environment:
      MYSQL_ROOT_USER: root
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: test
    ports:
      - '3306:3306'
    networks:
      - backend
  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - backend
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 30s
      retries: 3
  cache:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    networks:
      - backend
networks:
  backend:
    driver: bridge

volumes:
  data:
    driver: local
